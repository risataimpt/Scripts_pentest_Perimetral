import subprocess
import threading
import os

result_folder = 'perimetral_nmap_resultados'
if not os.path.exists(result_folder):
    os.makedirs(result_folder)

commands = [
    ('nmap -Pn -v -sV -n -iL ips.txt --open -p80,81,94,84,443,8443,7001,7002,8080,8081,8085,9001,9002,8086,5985,8008,9443,9084,9085,9087,5480,7444,9080,8983,8011,8012,50000,52000,623,8087,9100,8091,4443,3006,843,8088,902,8888', f'{result_folder}/http.txt'),
    ('nmap -Pn -v -sV -n -iL ips.txt --open -p1433 --script=ms-sql-empty-password,ms-sql-info,ms-sql-dump-hashes', f'{result_folder}/mssql.txt'),
    ('nmap -Pn -v -sV -n -iL ips.txt --open -p3306 --script=mysql-empty-password,mysql-brute,mysql-enum,mysql-vuln-cve2012-2122', f'{result_folder}/mysql.txt'),
    ('nmap -Pn -v -sV -n -iL ips.txt --open -p5900,5901,5800,5801 --script=vnc-info,realvnc-auth-bypass,vnc-brute', f'{result_folder}/vnc.txt'),
    ('nmap -Pn -v -sV -n -iL ips.txt --open -p6379 --script=redis-info', f'{result_folder}/redis.txt'),
    ('nmap -Pn -v -sV -n -iL ips.txt --open -p548 --script=afp-showmount,afp-path-vuln,afp-ls', f'{result_folder}/afp.txt'),
    ('nmap -Pn -v -sV -n -iL ips.txt --open -p631 --script=cups-info,cups-queue-info', f'{result_folder}/cups.txt'),
    ('nmap -Pn -v -sV -n -iL ips.txt --open -p21,2121 --script=ftp-anon,ftp-bounce,ftp-proftpd-backdoor,ftp-syst,ftp-vsftpd-backdoor,ftp-vuln-cve2010-4221', f'{result_folder}/ftp.txt'),
    ('nmap -Pn -v -sV -n -iL ips.txt --open -p445,139,135 --script=smb-os-discovery,smb-enum-shares,smb-double-pulsar-backdoor,samba-vuln-cve-2012-1182,smb-vuln*', f'{result_folder}/smb.txt'),
    ('nmap -Pn -v -sV -n -iL ips.txt --open -p7001,7002,7003 --script=weblogic-t3-info', f'{result_folder}/weblogic.txt'),
    ('nmap -Pn -v -sV -n -iL ips.txt --open -p111 --script=*nfs*', f'{result_folder}/nfs.txt'),
    ('nmap -Pn -v -sV -n -iL ips.txt --open -p50000 --script=drda-info,drda-brute', f'{result_folder}/drda.txt'),
    ('nmap -Pn -v -sV -n -iL ips.txt --open -p6000,6001,6002,6003,6004,6005,6006,6007,6008,6009 --script=x11-access.nse', f'{result_folder}/x11.txt')
]

def run_command(command, txt_output):
    with open(txt_output, 'w') as txt_file:
        process = subprocess.Popen(command, shell=True, stdout=subprocess.PIPE, stderr=subprocess.STDOUT, text=True)
        for line in process.stdout:
            print(line.strip())
            txt_file.write(line)

threads = []
for cmd, txt_out in commands:
    thread = threading.Thread(target=run_command, args=(cmd, txt_out))
    threads.append(thread)
    thread.start()

for thread in threads:
    thread.join()

print(f"Comandos ejecutados ver la carpeta '{result_folder}'.")